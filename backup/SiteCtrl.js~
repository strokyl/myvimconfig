'use strict';
angular.module('Ngwis.Controllers')
.controller('SiteCtrl', [ '$scope', '$translate', '$window', '$location', '$routeParams', '$filter', 'BrancheService', 'ActuService', 'ngTableParams', 
                        	function($scope, $translate, $window, $location, $routeParams, $filter, BrancheService, ActuService, ngTableParams) {
	
	var brancheName = $scope.selectedBranche = $scope.brancheName = $routeParams.brancheName;

	if(brancheName) {
		$scope.startWait()
		var actus = ActuService.list({brancheName:brancheName});
		//actus.$then($scope.endWait);
        actus.$then(function() {
            $scope.endWait();
        })
	}

    var tableParams = $scope.tableParams = new ngTableParams({
        page : 1,
        count : 25,
        sorting : {'name' : 'asc'}
    }, {
        total: 0,
        counts : [],
        getData : function($defer, params) {
            actus.$then(function(response) {
                var data = params.sorting() ?
                            $filter('orderBy')(response.data, params.orderBy())
                            :response.data;
                data = $filter('filter')(data, $scope.filter);
                $defer.resolve(data.slice((params.page() - 1) * params.count(),
                        params.page() * params.count()));
                params.total(data.length);
            });
        }
    })

    $scope.$watch('filter', function(newValue, oldValue) {
        if(newValue !== oldValue) {
            console.log("Trigger $waztch filter");
            tableParams.reload();
        }
    });


	$scope.startWait()
	var brancheList = $scope.brancheList = BrancheService.list();
	brancheList.$then($scope.endWait);
	
	
	$scope.$watch('selectedBranche', function(newValue) {
		if(newValue !== brancheName && newValue) {
			$location.path('/site/' + newValue);
		}
	});
	
	$scope.modify = function (elem) {
		console.log("Modify");
	}
	
	$scope.addMoreButton = function () {
		$location.path('/addActu/' + brancheName);
	}
	
	var more = $scope.more = function (elem) {
		   $scope.startWait();
		   ActuService.getOverview({brancheName:elem.brancheName, actuFile:elem.actuFile}, function(data) {
			   var url = data.url;
			   $window.open(url);
			   $scope.endWait();
		   }, function(error) {
			   console.log(error)
			   $scope.onError(error,$scope.columns);
			   $scope.endWait();
		   });
	   	};
	
	var edit = $scope.edit = function (elem) {
		$location.path('/updateActu/' + elem.brancheName + '/' + elem.actuFile);
	}
	
	$scope.textOver = function (item) {
		return item.titreFr;
	}
	   	
	//glyphicon glyphicon-pencil
	//display the overview of the modification in a new Windows
	$scope.otherButtons = [
	                       //bouton more
	                       {"class":'icon-af icon-af-B-digital-oeil-explorer', callback:more},
	                       //bouton edition
	                       {"class":'icon-af icon-af-B-digital-crayon-editer', callback:edit}
	                       ];
	
	/**
	$scope.remove = function (elem) {
		var param = {brancheName:elem.brancheName, actuFile:elem.actuFile};
		$scope.startWait();
		ActuService.remove(param, function(data) {
			$scope.flashMessage($translate("actu.deleted", param));
			angular.forEach($scope.actus, function (actu, i) {
				if (actu.brancheName === param.brancheName && actu.actuFile == param.actuFile) {
					$scope.actus.splice(i,1); 
				}
			});
			$scope.endWait();
		}, function(error) {
			console.log(error)
			$scope.onError(error,$scope.columns);
		});
	}
	**/
	
	$scope.columns = [
	                  {type: 'text', filter: 'basic', field:'actuFile', header:'actu.name', width:2, readonly: false, mandatory:true, message:'alphab√©tique', transform:"capitalize", exclamation_mark:'draft'},
	                  {type: 'text', filter : 'basic', field:'titreFr', header:'actu.titreFr', width:2, readonly: false, mandatory:false, hidden:true},
	                  {type: 'text', filter : 'basic', field:'titreEn', header:'actu.titreEn', width:2, readonly: false, mandatory:false, hidden:true},
	                  {type: 'text', field:'redacteur', header:'actu.redacteur', width:2, readonly: false, mandatory:false},
	                  {type: 'date', field:'actuDate', header:'actu.publication_date', width:2, readonly: false, mandatory:false}
		             ];
	
	$scope.orderBy = {field:'actuDate', reverse:'true'};
	
	$scope.saveRatingToServer = function(rating) { 
	       alert('Rating selected - ' + rating); 
	   }; 
	   
}]);
